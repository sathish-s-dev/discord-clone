// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  relationMode="prisma"
}


generator client {
  provider = "prisma-client-js"
}

model Profile {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique
  name String
  imageUrl String @db.String
  email String @db.String

  server Server[]
  member Member[]
  channel Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}



model Server {

  id     String @id @default(auto()) @map("_id") @db.ObjectId

  name  String

  imageUrl String @db.String
  inviteCode String @db.String

  member Member[]
  channel Channel[]

  profileId String @db.ObjectId
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

createdAt DateTime @default(now())
updatedAt DateTime @updatedAt

  @@index([profileId])
}

enum memberRole{
  ADMIN
  MODERATOR
  GUEST
}


model Member {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  role memberRole @default(GUEST)

  profileId String @db.ObjectId
  profile Profile  @relation(fields: [profileId], references: [id],onDelete: Cascade)

  serverId String @db.ObjectId

  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}


enum channelType{
  TEXT
  AUDIO
  VIDEO
}

model Channel{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String 
  type channelType @default(TEXT)

  profileId String @db.ObjectId
  profile Profile @relation(fields: [profileId], references: [id], onDelete:Cascade)

  serverId String @db.ObjectId
  server Server @relation(fields: [serverId], references: [id], onDelete:Cascade)



  @@index([profileId])
  @@index([serverId])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt



}